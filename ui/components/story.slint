import { CustomButton } from "common/button.slint";
import { CustomRoundButton } from "common/round_button.slint";
import { BackLogView } from "backlog.slint";
import { Colors } from "../styles/colors.slint";

export component StoryView {
    in property <length> container-width;
    in property <length> container-height;
    in property <string> dialogue;
    in property <string> speaker;
    in property <[{ index: int, text: string }]> choose-branch;
    in property <[{ speaker: string, text: string }]> backlogs;
    in property <image> bg;
    in property <image> fg-body-0;
    in property <int> current-choose: 0;
    in-out property <bool> is_backlog;

    callback backlog();
    callback backlog-change(int);
    callback clicked();
    callback choose(string);
    callback settings();
    callback save-game();
    callback load-game();
    

    TouchArea {
        width: parent.width;
        height: parent.height;

        scroll-event(event) => {
            if (event.delta-y > 0) {
                root.backlog();
                is_backlog = true;
                accept
            } else {
                reject
            }
        }
    }

    Rectangle {
        width: container-width;
        height: container-height;
        background: Colors.text-light;

        if current-choose == 0 : TouchArea {
            width: parent.width;
            height: parent.height;
            clicked => { if (!is_backlog) {root.clicked();} }
        }

        // 背景图片
        Image {
            source: root.bg;
            width: parent.width;
            height: parent.height;
        }

        // 角色立绘
        Image {
            source: root.fg-body-0;
            width: parent.width * 0.25;
            height: parent.width * 0.65;
            x: parent.width * 0.375;
            y: parent.height / 6;
        }

        // 对话框
        if root.current-choose == 0 && !root.is_backlog: Rectangle {
            y: parent.height * 0.75;
            width: parent.width;
            height: parent.height * 0.25;
            background: Colors.overlay-background;

            Text {
                text: root.speaker;
                x: parent.width / 64;
                y: 0;
                font-size: parent.height * 2 / 15;
                color: Colors.text-light;
                wrap: word-wrap;
                width: parent.width * 31 / 32;
            }

            Text {
                text: root.dialogue;
                x: parent.width / 64;
                y: parent.height * 0.2;
                font-size: parent.height * 2 / 15;
                color: Colors.text-light;
                wrap: word-wrap;
                width: parent.width * 31 / 32;
            }
        }

        // 选择分支
        if root.current-choose != 0 && !root.is_backlog: Rectangle {
            height: parent.height * 0.05 * (2 * root.current-choose - 1);
            width: parent.width * 0.75;

            for choose in root.choose-branch: Rectangle {
                height: parent.height / (2 * root.current-choose - 1);
                y: 2 * (choose.index - 1) * parent.height / (2 * root.current-choose - 1);
                background: Colors.overlay-background;

                Text {
                    text: choose.text;
                    font-size: parent.height;
                    color: Colors.text-light;
                }

                TouchArea {
                    clicked => { root.choose(choose.text); }
                }
            }
        }

        //下方按钮
        if !root.is_backlog: Rectangle {
            width: parent.width;
            height: parent.width * 0.04;
            y: parent.height - self.height - parent.height * 0.02;

            CustomRoundButton {
                width: parent.height;
                height: parent.height;
                x: parent.width * 0.85 - self.width;
                y: 0;
                text: "存档";
                clicked => { root.save-game(); }
            }

            CustomRoundButton {
                width: parent.height;
                height: parent.height;
                x: parent.width * 0.91 - self.width;
                y: 0;
                text: "读档";
                clicked => { root.load-game(); }
            }

            CustomRoundButton {
                width: parent.height;
                height: parent.height;
                x: parent.width * 0.97 - self.width;
                y: 0;
                text: "设置";
                clicked => { root.settings(); }
            }
        }

        //历史记录
        if root.is_backlog: BackLogView {
            container-width: parent.width;
            container-height: parent.height;
            backlogs <=> root.backlogs;
            back => { is_backlog = false; }
            backlog-change(i) => { root.backlog-change(i); }
        }
    }
}