import { Switch } from "std-widgets.slint";
import { CustomButton } from "common/button.slint";
import { VolumeSlider } from "common/volume_slider.slint";
import { Colors } from "../styles/colors.slint";

export component SettingsView {
    in property <length> container-width;
    in property <length> container-height;
    in property <bool> is-fullscreen;
    in-out property <float> main-volume: 100;
    in-out property <float> bgm-volume: 100;
    in-out property <float> voice-volume: 100;

    callback back();
    callback toggle-fullscreen();
    callback volume-changed();
    callback voice-volume-changed();

    Rectangle {
        width: container-width;
        height: container-height;
        background: Colors.overlay-background;

        // 返回按钮
        CustomButton {
            x: parent.width * 0.06;
            y: parent.height * 0.04;
            text: "返回游戏";
            button-width: parent.width * 0.10;
            button-height: parent.height * 0.06;
            font-size: parent.height * 0.06 * 0.4;
            clicked => { root.back(); }
        }

        // 设置面板
        Rectangle {
            x: parent.width * 0.02;
            y: parent.height * 0.05;
            width: parent.width * 0.4;
            height: parent.height * 0.6;

            // 全屏开关
            Rectangle {
                x: parent.x;
                y: parent.y;
                height: parent.height * 0.05;

                Text {
                    x: 0;
                    y: 0;
                    text: "全屏开关";
                    font-size: parent.height * 0.8;
                    color: Colors.text-light;
                    vertical-alignment: center;
                    width: parent.width * 0.3;
                }

                Rectangle {
                    x: parent.width * 0.2;
                    y: 0;
                    width: parent.width * 0.08;
                    height: parent.height;
                    background: Colors.slider-background;

                    Switch {
                        checked: root.is-fullscreen;
                        width: parent.width;
                        height: parent.height;
                        toggled => { root.toggle-fullscreen(); }
                    }
                }
            }

            // 音量滑块们
            VolumeSlider {
                y: parent.y + parent.height * 0.1;
                x: parent.x;
                width: parent.width;
                height: parent.height * 0.05;
                label: "主音量";
                volume: root.main-volume;
                volume-changed(value) => {
                    root.main-volume = value;
                    root.volume-changed();
                }
            }

            VolumeSlider {
                y: parent.y + parent.height * 0.2;
                x: parent.x;
                width: parent.width;
                height: parent.height * 0.05;
                label: "BGM音量";
                volume: root.bgm-volume;
                volume-changed(value) => {
                    root.bgm-volume = value;
                    root.volume-changed();
                }
            }

            VolumeSlider {
                y: parent.y + parent.height * 0.3;
                x: parent.x;
                width: parent.width;
                height: parent.height * 0.05;
                label: "语音音量";
                volume: root.voice-volume;
                volume-changed(value) => {
                    root.voice-volume = value;
                    root.voice-volume-changed();
                }
            }
        }
    }
}